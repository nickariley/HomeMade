// <auto-generated />
using System;
using HomeMade.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeMade.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("HomeMade.Core.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("IngredientEdibleYieldPercentage")
                        .HasColumnType("REAL");

                    b.Property<string>("IngredientName")
                        .HasColumnType("TEXT");

                    b.Property<int>("IngredientQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IngredientUnit")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IngredientEdibleYieldPercentage = 100f,
                            IngredientName = "Bread",
                            IngredientQuantity = 2,
                            IngredientUnit = "slices"
                        },
                        new
                        {
                            Id = 2,
                            IngredientEdibleYieldPercentage = 100f,
                            IngredientName = "Peanut Butter",
                            IngredientQuantity = 2,
                            IngredientUnit = "ounces"
                        },
                        new
                        {
                            Id = 3,
                            IngredientEdibleYieldPercentage = 66.67f,
                            IngredientName = "Banana",
                            IngredientQuantity = 2,
                            IngredientUnit = "ounces"
                        });
                });

            modelBuilder.Entity("HomeMade.Core.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float?>("PortionCost")
                        .HasColumnType("REAL");

                    b.Property<string>("RecipeClassification")
                        .HasColumnType("TEXT");

                    b.Property<float?>("RecipeCost")
                        .HasColumnType("REAL");

                    b.Property<string>("RecipeName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RecipeStandardYield")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RecipeClassification = "Lunch",
                            RecipeName = "Peanut Butter Banana Sandwiches",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("HomeMade.Core.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IngredientId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredient");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 1
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 2
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 3
                        });
                });

            modelBuilder.Entity("HomeMade.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nick"
                        });
                });

            modelBuilder.Entity("HomeMade.Core.Models.Recipe", b =>
                {
                    b.HasOne("HomeMade.Core.Models.User", "User")
                        .WithMany("Recipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HomeMade.Core.Models.RecipeIngredient", b =>
                {
                    b.HasOne("HomeMade.Core.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeMade.Core.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
